# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Easypark CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:latest
        # Same as in docker-compose file
        env:
          POSTGRES_USER: devUser
          POSTGRES_PASSWORD: devPassword
          POSTGRES_DB: easypark
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.1'

    - name: Install Mockery
      run:  |
        go install github.com/vektra/mockery/v2@v2.43.0

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Make checks
      run: |
        make checks 
        git diff --exit-code || (echo 'Auto-generated and vendor files are out of date or not committed. Please update them and commit the changes.' && exit 1)

    - name: Build
      run: make build

    - name: Unit Test
      run: make unit

    - name: Test Coverage
      id: coverage-report
      run: |
        COVERAGE=$(make coverage-report | grep total: | awk '{print substr($3, 1, length($3)-1)}')
        echo "Coverage: $COVERAGE%"
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
         if (( $(echo "$COVERAGE < 70" |bc -l) )); then
          echo "Code coverage below 70%. Failing..."
          exit 1
        fi
    
    - name: Wait for PostgreSQL
      run: until pg_isready -h localhost -p 5432; do sleep 1; done

    - name: Functional Tests
      run: |
        make run &
        APP_PID=$!
        sleep 5
        make functional
        kill $APP_PID
