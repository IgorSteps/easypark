// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/IgorSteps/easypark/internal/adapters/datastore"
	"github.com/IgorSteps/easypark/internal/adapters/rest/handlers"
	"github.com/IgorSteps/easypark/internal/adapters/rest/routes"
	"github.com/IgorSteps/easypark/internal/adapters/usecasefacades"
	"github.com/IgorSteps/easypark/internal/drivers/db"
	"github.com/IgorSteps/easypark/internal/drivers/httpserver"
	"github.com/IgorSteps/easypark/internal/usecases"
	"github.com/sirupsen/logrus"
)

// Injectors from wire.go:

func BuildDIForApp() (*App, error) {
	logger := logrus.New()
	gormDB, err := db.NewDatabaseFromConfig()
	if err != nil {
		return nil, err
	}
	gormWrapper := db.NewGormWrapper(gormDB)
	userPostgresRepository := datastore.NewUserPostgresRepository(gormWrapper, logger)
	registerUser := usecases.NewRegisterUser(logger, userPostgresRepository)
	userFacade := usecasefacades.NewUserFacade(registerUser)
	handlerFactory := handlers.NewHandlerFactory(logger, userFacade)
	router := routes.NewRouter(handlerFactory)
	server := httpserver.NewServer(router)
	app := NewApp(server, logger)
	return app, nil
}
